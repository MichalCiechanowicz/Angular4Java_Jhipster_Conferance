{"version":3,"sources":["./src/main/webapp/app/entities/speaker/service/speaker.service.ts","./src/main/webapp/app/entities/speaker/speaker.model.ts","./src/main/webapp/app/entities/speaker/route/speaker-routing.module.ts","./src/main/webapp/app/entities/speaker/delete/speaker-delete-dialog.component.html","./src/main/webapp/app/entities/speaker/delete/speaker-delete-dialog.component.ts","./src/main/webapp/app/entities/speaker/speaker.module.ts","./src/main/webapp/app/entities/speaker/detail/speaker-detail.component.html","./src/main/webapp/app/entities/speaker/detail/speaker-detail.component.ts","./src/main/webapp/app/entities/speaker/update/speaker-update.component.ts","./src/main/webapp/app/entities/speaker/update/speaker-update.component.html","./src/main/webapp/app/entities/speaker/list/speaker.component.ts","./src/main/webapp/app/entities/speaker/list/speaker.component.html","./src/main/webapp/app/entities/speaker/route/speaker-routing-resolve.service.ts"],"names":[],"mappings":"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","file":"speaker-speaker-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { isPresent } from 'app/core/util/operators';\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\nimport { createRequestOption } from 'app/core/request/request-util';\nimport { ISpeaker, getSpeakerIdentifier } from '../speaker.model';\n\nexport type EntityResponseType = HttpResponse<ISpeaker>;\nexport type EntityArrayResponseType = HttpResponse<ISpeaker[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class SpeakerService {\n  public resourceUrl = this.applicationConfigService.getEndpointFor('api/speakers');\n\n  constructor(protected http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\n\n  create(speaker: ISpeaker): Observable<EntityResponseType> {\n    return this.http.post<ISpeaker>(this.resourceUrl, speaker, { observe: 'response' });\n  }\n\n  update(speaker: ISpeaker): Observable<EntityResponseType> {\n    return this.http.put<ISpeaker>(`${this.resourceUrl}/${getSpeakerIdentifier(speaker) as number}`, speaker, { observe: 'response' });\n  }\n\n  partialUpdate(speaker: ISpeaker): Observable<EntityResponseType> {\n    return this.http.patch<ISpeaker>(`${this.resourceUrl}/${getSpeakerIdentifier(speaker) as number}`, speaker, { observe: 'response' });\n  }\n\n  find(id: number): Observable<EntityResponseType> {\n    return this.http.get<ISpeaker>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  query(req?: any): Observable<EntityArrayResponseType> {\n    const options = createRequestOption(req);\n    return this.http.get<ISpeaker[]>(this.resourceUrl, { params: options, observe: 'response' });\n  }\n\n  delete(id: number): Observable<HttpResponse<{}>> {\n    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n  }\n\n  addSpeakerToCollectionIfMissing(speakerCollection: ISpeaker[], ...speakersToCheck: (ISpeaker | null | undefined)[]): ISpeaker[] {\n    const speakers: ISpeaker[] = speakersToCheck.filter(isPresent);\n    if (speakers.length > 0) {\n      const speakerCollectionIdentifiers = speakerCollection.map(speakerItem => getSpeakerIdentifier(speakerItem)!);\n      const speakersToAdd = speakers.filter(speakerItem => {\n        const speakerIdentifier = getSpeakerIdentifier(speakerItem);\n        if (speakerIdentifier == null || speakerCollectionIdentifiers.includes(speakerIdentifier)) {\n          return false;\n        }\n        speakerCollectionIdentifiers.push(speakerIdentifier);\n        return true;\n      });\n      return [...speakersToAdd, ...speakerCollection];\n    }\n    return speakerCollection;\n  }\n}\n","import { ISession } from 'app/entities/session/session.model';\n\nexport interface ISpeaker {\n  id?: number;\n  firstName?: string;\n  sureName?: string;\n  email?: string;\n  twitter?: string;\n  bio?: string;\n  sessions?: ISession[] | null;\n}\n\nexport class Speaker implements ISpeaker {\n  constructor(\n    public id?: number,\n    public firstName?: string,\n    public sureName?: string,\n    public email?: string,\n    public twitter?: string,\n    public bio?: string,\n    public sessions?: ISession[] | null\n  ) {}\n}\n\nexport function getSpeakerIdentifier(speaker: ISpeaker): number | undefined {\n  return speaker.id;\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\nimport { SpeakerComponent } from '../list/speaker.component';\nimport { SpeakerDetailComponent } from '../detail/speaker-detail.component';\nimport { SpeakerUpdateComponent } from '../update/speaker-update.component';\nimport { SpeakerRoutingResolveService } from './speaker-routing-resolve.service';\n\nconst speakerRoute: Routes = [\n  {\n    path: '',\n    component: SpeakerComponent,\n    canActivate: [UserRouteAccessService],\n  },\n  {\n    path: ':id/view',\n    component: SpeakerDetailComponent,\n    resolve: {\n      speaker: SpeakerRoutingResolveService,\n    },\n    canActivate: [UserRouteAccessService],\n  },\n  {\n    path: 'new',\n    component: SpeakerUpdateComponent,\n    resolve: {\n      speaker: SpeakerRoutingResolveService,\n    },\n    canActivate: [UserRouteAccessService],\n  },\n  {\n    path: ':id/edit',\n    component: SpeakerUpdateComponent,\n    resolve: {\n      speaker: SpeakerRoutingResolveService,\n    },\n    canActivate: [UserRouteAccessService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(speakerRoute)],\n  exports: [RouterModule],\n})\nexport class SpeakerRoutingModule {}\n","<form *ngIf=\"speaker\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(speaker.id!)\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" data-cy=\"speakerDeleteDialogHeading\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\n  </div>\n\n  <div class=\"modal-body\">\n    <jhi-alert-error></jhi-alert-error>\n\n    <p id=\"jhi-delete-speaker-heading\" jhiTranslate=\"gatewayApp.speaker.delete.question\" [translateValues]=\"{ id: speaker.id }\">\n      Are you sure you want to delete this Speaker?\n    </p>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n    </button>\n\n    <button id=\"jhi-confirm-delete-speaker\" data-cy=\"entityConfirmDeleteButton\" type=\"submit\" class=\"btn btn-danger\">\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n    </button>\n  </div>\n</form>\n","import { Component } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ISpeaker } from '../speaker.model';\nimport { SpeakerService } from '../service/speaker.service';\n\n@Component({\n  templateUrl: './speaker-delete-dialog.component.html',\n})\nexport class SpeakerDeleteDialogComponent {\n  speaker?: ISpeaker;\n\n  constructor(protected speakerService: SpeakerService, public activeModal: NgbActiveModal) {}\n\n  cancel(): void {\n    this.activeModal.dismiss();\n  }\n\n  confirmDelete(id: number): void {\n    this.speakerService.delete(id).subscribe(() => {\n      this.activeModal.close('deleted');\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from 'app/shared/shared.module';\nimport { SpeakerComponent } from './list/speaker.component';\nimport { SpeakerDetailComponent } from './detail/speaker-detail.component';\nimport { SpeakerUpdateComponent } from './update/speaker-update.component';\nimport { SpeakerDeleteDialogComponent } from './delete/speaker-delete-dialog.component';\nimport { SpeakerRoutingModule } from './route/speaker-routing.module';\n\n@NgModule({\n  imports: [SharedModule, SpeakerRoutingModule],\n  declarations: [SpeakerComponent, SpeakerDetailComponent, SpeakerUpdateComponent, SpeakerDeleteDialogComponent],\n  entryComponents: [SpeakerDeleteDialogComponent],\n})\nexport class SpeakerModule {}\n","<div class=\"row justify-content-center\">\n  <div class=\"col-8\">\n    <div *ngIf=\"speaker\">\n      <h2 data-cy=\"speakerDetailsHeading\"><span jhiTranslate=\"gatewayApp.speaker.detail.title\">Speaker</span></h2>\n\n      <hr />\n\n      <jhi-alert-error></jhi-alert-error>\n\n      <jhi-alert></jhi-alert>\n\n      <dl class=\"row-md jh-entity-details\">\n        <dt><span jhiTranslate=\"global.field.id\">ID</span></dt>\n        <dd>\n          <span>{{ speaker.id }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"gatewayApp.speaker.firstName\">First Name</span></dt>\n        <dd>\n          <span>{{ speaker.firstName }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"gatewayApp.speaker.sureName\">Sure Name</span></dt>\n        <dd>\n          <span>{{ speaker.sureName }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"gatewayApp.speaker.email\">Email</span></dt>\n        <dd>\n          <span>{{ speaker.email }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"gatewayApp.speaker.twitter\">Twitter</span></dt>\n        <dd>\n          <span>{{ speaker.twitter }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"gatewayApp.speaker.bio\">Bio</span></dt>\n        <dd>\n          <span>{{ speaker.bio }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"gatewayApp.speaker.sessions\">Sessions</span></dt>\n        <dd>\n          <span *ngFor=\"let sessions of speaker.sessions; let last = last\">\n            <a [routerLink]=\"['/session', sessions?.id, 'view']\">{{ sessions.id }}</a\n            >{{ last ? '' : ', ' }}\n          </span>\n        </dd>\n      </dl>\n\n      <button type=\"submit\" (click)=\"previousState()\" class=\"btn btn-info\" data-cy=\"entityDetailsBackButton\">\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.back\">Back</span>\n      </button>\n\n      <button type=\"button\" [routerLink]=\"['/speaker', speaker.id, 'edit']\" class=\"btn btn-primary\">\n        <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.edit\">Edit</span>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ISpeaker } from '../speaker.model';\nimport { DataUtils } from 'app/core/util/data-util.service';\n\n@Component({\n  selector: 'jhi-speaker-detail',\n  templateUrl: './speaker-detail.component.html',\n})\nexport class SpeakerDetailComponent implements OnInit {\n  speaker: ISpeaker | null = null;\n\n  constructor(protected dataUtils: DataUtils, protected activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ speaker }) => {\n      this.speaker = speaker;\n    });\n  }\n\n  byteSize(base64String: string): string {\n    return this.dataUtils.byteSize(base64String);\n  }\n\n  openFile(base64String: string, contentType: string | null | undefined): void {\n    this.dataUtils.openFile(base64String, contentType);\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { finalize, map } from 'rxjs/operators';\n\nimport { ISpeaker, Speaker } from '../speaker.model';\nimport { SpeakerService } from '../service/speaker.service';\nimport { AlertError } from 'app/shared/alert/alert-error.model';\nimport { EventManager, EventWithContent } from 'app/core/util/event-manager.service';\nimport { DataUtils, FileLoadError } from 'app/core/util/data-util.service';\nimport { ISession } from 'app/entities/session/session.model';\nimport { SessionService } from 'app/entities/session/service/session.service';\n\n@Component({\n  selector: 'jhi-speaker-update',\n  templateUrl: './speaker-update.component.html',\n})\nexport class SpeakerUpdateComponent implements OnInit {\n  isSaving = false;\n\n  sessionsSharedCollection: ISession[] = [];\n\n  editForm = this.fb.group({\n    id: [],\n    firstName: [null, [Validators.required]],\n    sureName: [null, [Validators.required]],\n    email: [null, [Validators.required]],\n    twitter: [null, [Validators.required]],\n    bio: [null, [Validators.required]],\n    sessions: [],\n  });\n\n  constructor(\n    protected dataUtils: DataUtils,\n    protected eventManager: EventManager,\n    protected speakerService: SpeakerService,\n    protected sessionService: SessionService,\n    protected activatedRoute: ActivatedRoute,\n    protected fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ speaker }) => {\n      this.updateForm(speaker);\n\n      this.loadRelationshipsOptions();\n    });\n  }\n\n  byteSize(base64String: string): string {\n    return this.dataUtils.byteSize(base64String);\n  }\n\n  openFile(base64String: string, contentType: string | null | undefined): void {\n    this.dataUtils.openFile(base64String, contentType);\n  }\n\n  setFileData(event: Event, field: string, isImage: boolean): void {\n    this.dataUtils.loadFileToForm(event, this.editForm, field, isImage).subscribe({\n      error: (err: FileLoadError) =>\n        this.eventManager.broadcast(\n          new EventWithContent<AlertError>('gatewayApp.error', { ...err, key: 'error.file.' + err.key })\n        ),\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const speaker = this.createFromForm();\n    if (speaker.id !== undefined) {\n      this.subscribeToSaveResponse(this.speakerService.update(speaker));\n    } else {\n      this.subscribeToSaveResponse(this.speakerService.create(speaker));\n    }\n  }\n\n  trackSessionById(index: number, item: ISession): number {\n    return item.id!;\n  }\n\n  getSelectedSession(option: ISession, selectedVals?: ISession[]): ISession {\n    if (selectedVals) {\n      for (const selectedVal of selectedVals) {\n        if (option.id === selectedVal.id) {\n          return selectedVal;\n        }\n      }\n    }\n    return option;\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<ISpeaker>>): void {\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    // Api for inheritance.\n  }\n\n  protected onSaveFinalize(): void {\n    this.isSaving = false;\n  }\n\n  protected updateForm(speaker: ISpeaker): void {\n    this.editForm.patchValue({\n      id: speaker.id,\n      firstName: speaker.firstName,\n      sureName: speaker.sureName,\n      email: speaker.email,\n      twitter: speaker.twitter,\n      bio: speaker.bio,\n      sessions: speaker.sessions,\n    });\n\n    this.sessionsSharedCollection = this.sessionService.addSessionToCollectionIfMissing(\n      this.sessionsSharedCollection,\n      ...(speaker.sessions ?? [])\n    );\n  }\n\n  protected loadRelationshipsOptions(): void {\n    this.sessionService\n      .query()\n      .pipe(map((res: HttpResponse<ISession[]>) => res.body ?? []))\n      .pipe(\n        map((sessions: ISession[]) =>\n          this.sessionService.addSessionToCollectionIfMissing(sessions, ...(this.editForm.get('sessions')!.value ?? []))\n        )\n      )\n      .subscribe((sessions: ISession[]) => (this.sessionsSharedCollection = sessions));\n  }\n\n  protected createFromForm(): ISpeaker {\n    return {\n      ...new Speaker(),\n      id: this.editForm.get(['id'])!.value,\n      firstName: this.editForm.get(['firstName'])!.value,\n      sureName: this.editForm.get(['sureName'])!.value,\n      email: this.editForm.get(['email'])!.value,\n      twitter: this.editForm.get(['twitter'])!.value,\n      bio: this.editForm.get(['bio'])!.value,\n      sessions: this.editForm.get(['sessions'])!.value,\n    };\n  }\n}\n","<div class=\"row justify-content-center\">\n  <div class=\"col-8\">\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\n      <h2 id=\"jhi-speaker-heading\" data-cy=\"SpeakerCreateUpdateHeading\" jhiTranslate=\"gatewayApp.speaker.home.createOrEditLabel\">\n        Create or edit a Speaker\n      </h2>\n\n      <div>\n        <jhi-alert-error></jhi-alert-error>\n\n        <div class=\"form-group\" [hidden]=\"editForm.get('id')!.value == null\">\n          <label class=\"form-control-label\" jhiTranslate=\"global.field.id\" for=\"field_id\">ID</label>\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"gatewayApp.speaker.firstName\" for=\"field_firstName\">First Name</label>\n          <input type=\"text\" class=\"form-control\" name=\"firstName\" id=\"field_firstName\" data-cy=\"firstName\" formControlName=\"firstName\" />\n          <div *ngIf=\"editForm.get('firstName')!.invalid && (editForm.get('firstName')!.dirty || editForm.get('firstName')!.touched)\">\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"editForm.get('firstName')?.errors?.required\"\n              jhiTranslate=\"entity.validation.required\"\n            >\n              This field is required.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"gatewayApp.speaker.sureName\" for=\"field_sureName\">Sure Name</label>\n          <input type=\"text\" class=\"form-control\" name=\"sureName\" id=\"field_sureName\" data-cy=\"sureName\" formControlName=\"sureName\" />\n          <div *ngIf=\"editForm.get('sureName')!.invalid && (editForm.get('sureName')!.dirty || editForm.get('sureName')!.touched)\">\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"editForm.get('sureName')?.errors?.required\"\n              jhiTranslate=\"entity.validation.required\"\n            >\n              This field is required.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"gatewayApp.speaker.email\" for=\"field_email\">Email</label>\n          <input type=\"text\" class=\"form-control\" name=\"email\" id=\"field_email\" data-cy=\"email\" formControlName=\"email\" />\n          <div *ngIf=\"editForm.get('email')!.invalid && (editForm.get('email')!.dirty || editForm.get('email')!.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('email')?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n              This field is required.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"gatewayApp.speaker.twitter\" for=\"field_twitter\">Twitter</label>\n          <input type=\"text\" class=\"form-control\" name=\"twitter\" id=\"field_twitter\" data-cy=\"twitter\" formControlName=\"twitter\" />\n          <div *ngIf=\"editForm.get('twitter')!.invalid && (editForm.get('twitter')!.dirty || editForm.get('twitter')!.touched)\">\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"editForm.get('twitter')?.errors?.required\"\n              jhiTranslate=\"entity.validation.required\"\n            >\n              This field is required.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"gatewayApp.speaker.bio\" for=\"field_bio\">Bio</label>\n          <textarea class=\"form-control\" name=\"bio\" id=\"field_bio\" data-cy=\"bio\" formControlName=\"bio\"></textarea>\n          <div *ngIf=\"editForm.get('bio')!.invalid && (editForm.get('bio')!.dirty || editForm.get('bio')!.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('bio')?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n              This field is required.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label jhiTranslate=\"gatewayApp.speaker.sessions\" for=\"field_sessions\">Sessions</label>\n          <select class=\"form-control\" id=\"field_sessions\" data-cy=\"sessions\" multiple name=\"sessions\" formControlName=\"sessions\">\n            <option\n              [ngValue]=\"getSelectedSession(sessionOption, editForm.get('sessions')!.value)\"\n              *ngFor=\"let sessionOption of sessionsSharedCollection; trackBy: trackSessionById\"\n            >\n              {{ sessionOption.id }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div>\n        <button type=\"button\" id=\"cancel-save\" class=\"btn btn-secondary\" (click)=\"previousState()\">\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n\n        <button\n          type=\"submit\"\n          id=\"save-entity\"\n          data-cy=\"entityCreateSaveButton\"\n          [disabled]=\"editForm.invalid || isSaving\"\n          class=\"btn btn-primary\"\n        >\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ISpeaker } from '../speaker.model';\nimport { SpeakerService } from '../service/speaker.service';\nimport { SpeakerDeleteDialogComponent } from '../delete/speaker-delete-dialog.component';\nimport { DataUtils } from 'app/core/util/data-util.service';\n\n@Component({\n  selector: 'jhi-speaker',\n  templateUrl: './speaker.component.html',\n})\nexport class SpeakerComponent implements OnInit {\n  speakers?: ISpeaker[];\n  isLoading = false;\n\n  constructor(protected speakerService: SpeakerService, protected dataUtils: DataUtils, protected modalService: NgbModal) {}\n\n  loadAll(): void {\n    this.isLoading = true;\n\n    this.speakerService.query().subscribe(\n      (res: HttpResponse<ISpeaker[]>) => {\n        this.isLoading = false;\n        this.speakers = res.body ?? [];\n      },\n      () => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.loadAll();\n  }\n\n  trackId(index: number, item: ISpeaker): number {\n    return item.id!;\n  }\n\n  byteSize(base64String: string): string {\n    return this.dataUtils.byteSize(base64String);\n  }\n\n  openFile(base64String: string, contentType: string | null | undefined): void {\n    return this.dataUtils.openFile(base64String, contentType);\n  }\n\n  delete(speaker: ISpeaker): void {\n    const modalRef = this.modalService.open(SpeakerDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\n    modalRef.componentInstance.speaker = speaker;\n    // unsubscribe not needed because closed completes on modal close\n    modalRef.closed.subscribe(reason => {\n      if (reason === 'deleted') {\n        this.loadAll();\n      }\n    });\n  }\n}\n","<div>\n  <h2 id=\"page-heading\" data-cy=\"SpeakerHeading\">\n    <span jhiTranslate=\"gatewayApp.speaker.home.title\">Speakers</span>\n\n    <div class=\"d-flex justify-content-end\">\n      <button class=\"btn btn-info mr-2\" (click)=\"loadAll()\" [disabled]=\"isLoading\">\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\n        <span jhiTranslate=\"gatewayApp.speaker.home.refreshListLabel\">Refresh List</span>\n      </button>\n\n      <button\n        id=\"jh-create-entity\"\n        data-cy=\"entityCreateButton\"\n        class=\"btn btn-primary jh-create-entity create-speaker\"\n        [routerLink]=\"['/speaker/new']\"\n      >\n        <fa-icon icon=\"plus\"></fa-icon>\n        <span jhiTranslate=\"gatewayApp.speaker.home.createLabel\"> Create a new Speaker </span>\n      </button>\n    </div>\n  </h2>\n\n  <jhi-alert-error></jhi-alert-error>\n\n  <jhi-alert></jhi-alert>\n\n  <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"speakers?.length === 0\">\n    <span jhiTranslate=\"gatewayApp.speaker.home.notFound\">No speakers found</span>\n  </div>\n\n  <div class=\"table-responsive\" id=\"entities\" *ngIf=\"speakers && speakers.length > 0\">\n    <table class=\"table table-striped\" aria-describedby=\"page-heading\">\n      <thead>\n        <tr>\n          <th scope=\"col\"><span jhiTranslate=\"global.field.id\">ID</span></th>\n          <th scope=\"col\"><span jhiTranslate=\"gatewayApp.speaker.firstName\">First Name</span></th>\n          <th scope=\"col\"><span jhiTranslate=\"gatewayApp.speaker.sureName\">Sure Name</span></th>\n          <th scope=\"col\"><span jhiTranslate=\"gatewayApp.speaker.email\">Email</span></th>\n          <th scope=\"col\"><span jhiTranslate=\"gatewayApp.speaker.twitter\">Twitter</span></th>\n          <th scope=\"col\"><span jhiTranslate=\"gatewayApp.speaker.bio\">Bio</span></th>\n          <th scope=\"col\"><span jhiTranslate=\"gatewayApp.speaker.sessions\">Sessions</span></th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let speaker of speakers; trackBy: trackId\" data-cy=\"entityTable\">\n          <td>\n            <a [routerLink]=\"['/speaker', speaker.id, 'view']\">{{ speaker.id }}</a>\n          </td>\n          <td>{{ speaker.firstName }}</td>\n          <td>{{ speaker.sureName }}</td>\n          <td>{{ speaker.email }}</td>\n          <td>{{ speaker.twitter }}</td>\n          <td>{{ speaker.bio }}</td>\n          <td>\n            <span *ngFor=\"let sessions of speaker.sessions; let last = last\">\n              <a class=\"form-control-static\" [routerLink]=\"['/session', sessions.id, 'view']\">{{ sessions.id }}</a\n              >{{ last ? '' : ', ' }}\n            </span>\n          </td>\n          <td class=\"text-right\">\n            <div class=\"btn-group\">\n              <button\n                type=\"submit\"\n                [routerLink]=\"['/speaker', speaker.id, 'view']\"\n                class=\"btn btn-info btn-sm\"\n                data-cy=\"entityDetailsButton\"\n              >\n                <fa-icon icon=\"eye\"></fa-icon>\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.view\">View</span>\n              </button>\n\n              <button\n                type=\"submit\"\n                [routerLink]=\"['/speaker', speaker.id, 'edit']\"\n                class=\"btn btn-primary btn-sm\"\n                data-cy=\"entityEditButton\"\n              >\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\">Edit</span>\n              </button>\n\n              <button type=\"submit\" (click)=\"delete(speaker)\" class=\"btn btn-danger btn-sm\" data-cy=\"entityDeleteButton\">\n                <fa-icon icon=\"times\"></fa-icon>\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.delete\">Delete</span>\n              </button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { ISpeaker, Speaker } from '../speaker.model';\nimport { SpeakerService } from '../service/speaker.service';\n\n@Injectable({ providedIn: 'root' })\nexport class SpeakerRoutingResolveService implements Resolve<ISpeaker> {\n  constructor(protected service: SpeakerService, protected router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<ISpeaker> | Observable<never> {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id).pipe(\n        mergeMap((speaker: HttpResponse<Speaker>) => {\n          if (speaker.body) {\n            return of(speaker.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        })\n      );\n    }\n    return of(new Speaker());\n  }\n}\n"],"sourceRoot":"webpack:///"}