{"version":3,"sources":["./src/main/webapp/app/entities/session/delete/session-delete-dialog.component.html","./src/main/webapp/app/entities/session/delete/session-delete-dialog.component.ts","./src/main/webapp/app/entities/session/detail/session-detail.component.html","./src/main/webapp/app/entities/session/detail/session-detail.component.ts","./src/main/webapp/app/config/input.constants.ts","./src/main/webapp/app/entities/session/update/session-update.component.ts","./src/main/webapp/app/entities/session/update/session-update.component.html","./src/main/webapp/app/entities/session/session.module.ts","./src/main/webapp/app/entities/session/route/session-routing.module.ts","./src/main/webapp/app/entities/session/list/session.component.ts","./src/main/webapp/app/entities/session/list/session.component.html","./src/main/webapp/app/entities/session/route/session-routing-resolve.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,0EAAgF;IAAxC,0VAAuC;IAC7E;IAAA,yEAA0B;IACxB;IAAA,wEAAgG;IAAA,mFAAwB;IAAA,4DAAK;IAE7H;IAAA,4EAA+F;IAAnB,8TAAkB;IAAC,iEAAO;IAAA,4DAAS;IACjH;IAAA,4DAAM;IAEN;IAAA,0EAAwB;IACtB;IAAA,8EAAmC;IAEnC;IAAA,wEAA4H;IAC1H,uHACF;IAAA,4DAAI;IACN;IAAA,4DAAM;IAEN;IAAA,0EAA0B;IACxB;IAAA,6EAAwF;IAAnB,+TAAkB;IACrF;IAAA,yEAA8B;IAAA,kEAAM;IAAA,4EAA0C;IAAA,kEAAM;IAAA,4DAAO;IAC7F;IAAA,4DAAS;IAET;IAAA,8EAAiH;IAC/G;IAAA,0EAAgC;IAAA,kEAAM;IAAA,4EAA0C;IAAA,kEAAM;IAAA,4DAAO;IAC/F;IAAA,4DAAS;IACX;IAAA,4DAAM;IACR;IAAA,4DAAO;;;IAdkF,2DAAsC;IAAtC,qKAAsC;;ACDxH,MAAM,4BAA4B;IAGvC,YAAsB,cAA8B,EAAS,WAA2B;QAAlE,mBAAc,GAAd,cAAc,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAgB;IAAG,CAAC;IAE5F,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC5C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;;wGAbU,4BAA4B;4GAA5B,4BAA4B;QDTzC,2HAwBO;QACP;;QAzBO,6EAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEEhB,sEAAqB;IACnB;IAAA,wEAAoC;IAAA,0EAAqD;IAAA,kEAAO;IAAA,4DAAO;IAAA,4DAAK;IAE5G;IAAA,gEAAM;IAEN;IAAA,6EAAmC;IAEnC;IAAA,wEAAuB;IAEvB;IAAA,yEAAqC;IACnC;IAAA,sEAAI;IAAA,2EAAqC;IAAA,8DAAE;IAAA,4DAAO;IAAA,4DAAK;IACvD;IAAA,sEAAI;IACF;IAAA,wEAAM;IAAA,wDAAgB;IAAA,4DAAO;IAC/B;IAAA,4DAAK;IACL;IAAA,sEAAI;IAAA,2EAA8C;IAAA,iEAAK;IAAA,4DAAO;IAAA,4DAAK;IACnE;IAAA,sEAAI;IACF;IAAA,wEAAM;IAAA,wDAAmB;IAAA,4DAAO;IAClC;IAAA,4DAAK;IACL;IAAA,sEAAI;IAAA,2EAAoD;IAAA,uEAAW;IAAA,4DAAO;IAAA,4DAAK;IAC/E;IAAA,sEAAI;IACF;IAAA,wEAAM;IAAA,wDAAyB;IAAA,4DAAO;IACxC;IAAA,4DAAK;IACL;IAAA,sEAAI;IAAA,2EAAkD;IAAA,sEAAU;IAAA,4DAAO;IAAA,4DAAK;IAC5E;IAAA,sEAAI;IACF;IAAA,wEAAM;IAAA,wDAA8C;;IAAA,4DAAO;IAC7D;IAAA,4DAAK;IACL;IAAA,sEAAI;IAAA,4EAAgD;IAAA,oEAAQ;IAAA,4DAAO;IAAA,4DAAK;IACxE;IAAA,sEAAI;IACF;IAAA,wEAAM;IAAA,wDAA4C;;IAAA,4DAAO;IAC3D;IAAA,4DAAK;IACP;IAAA,4DAAK;IAEL;IAAA,8EAAuG;IAAjF,+TAAyB;IAC7C;IAAA,0EAAqC;IAAA,kEAAM;IAAA,4EAAwC;IAAA,gEAAI;IAAA,4DAAO;IAChG;IAAA,4DAAS;IAET;IAAA,8EAA8F;IAC5F;IAAA,0EAAqC;IAAA,kEAAM;IAAA,4EAAwC;IAAA,gEAAI;IAAA,4DAAO;IAChG;IAAA,4DAAS;IACX;IAAA,4DAAM;;;IA3BM,2DAAgB;IAAhB,kFAAgB;IAIhB,2DAAmB;IAAnB,qFAAmB;IAInB,2DAAyB;IAAzB,2FAAyB;IAIzB,2DAA8C;IAA9C,2JAA8C;IAI9C,2DAA4C;IAA5C,yJAA4C;IAQhC,2DAA+C;IAA/C,iKAA+C;;AC5BpE,MAAM,sBAAsB;IAGjC,YAAsB,SAAoB,EAAY,cAA8B;QAA9D,cAAS,GAAT,SAAS,CAAW;QAAY,mBAAc,GAAd,cAAc,CAAgB;QAFpF,YAAO,GAAoB,IAAI,CAAC;IAEuD,CAAC;IAExF,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;YACjD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,YAAoB;QAC3B,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAC/C,CAAC;IAED,QAAQ,CAAC,YAAoB,EAAE,WAAsC;QACnE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;IACrD,CAAC;IAED,aAAa;QACX,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;;4FArBU,sBAAsB;sGAAtB,sBAAsB;QDVnC,yEAAwC;QACtC;QAAA,yEAAmB;QACjB;QAAA,oHAuCM;QACR;QAAA,4DAAM;QACR;QAAA,4DAAM;QACN;;QA1CU,0DAAa;QAAb,6EAAa;;;;;;;;;;;;;;AEFvB;AAAA;AAAA;AAAO,MAAM,WAAW,GAAG,YAAY,CAAC;AACjC,MAAM,gBAAgB,GAAG,kBAAkB,CAAC;;;;;;;;;;;;;ACCnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAGf;AAEX;AAC+B;AAET;AAGgC;;;;;;;;;;;;ICMzE,4EAA+H;IAC7H,gHACF;IAAA,4DAAQ;;;IAHV,sEAAgH;IAC9G;IAAA,8HAEQ;IACV;IAAA,4DAAM;;;;IAHkC,0DAA6C;IAA7C,mLAA6C;;;IAgBnF,4EAIC;IACC,gHACF;IAAA,4DAAQ;;;IAPV,sEAAkI;IAChI;IAAA,8HAMQ;IACV;IAAA,4DAAM;;;;IALD,0DAAmD;IAAnD,yLAAmD;;;IAsBtD,4EAIC;IACC,gHACF;IAAA,4DAAQ;;;IAPV,sEAA4H;IAC1H;IAAA,8HAMQ;IACR;IAAA,4EAIC;IACC,8HACF;IAAA,4DAAQ;IACV;IAAA,4DAAM;;;;;IAZD,0DAAiD;IAAjD,uLAAiD;IAOlD,0DAAiE;IAAjE,sMAAiE;;;IAsBnE,4EAIC;IACC,gHACF;IAAA,4DAAQ;;;IAPV,sEAAsH;IACpH;IAAA,8HAMQ;IACR;IAAA,4EAIC;IACC,8HACF;IAAA,4DAAQ;IACV;IAAA,4DAAM;;;;;IAZD,0DAA+C;IAA/C,qLAA+C;IAOhD,0DAA+D;IAA/D,oMAA+D;;AD/EtE,MAAM,sBAAsB;IAWjC,YACY,SAAoB,EACpB,YAA0B,EAC1B,cAA8B,EAC9B,cAA8B,EAC9B,EAAe;QAJf,cAAS,GAAT,SAAS,CAAW;QACpB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,OAAE,GAAF,EAAE,CAAa;QAf3B,aAAQ,GAAG,KAAK,CAAC;QAEjB,aAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvB,EAAE,EAAE,EAAE;YACN,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1C,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACvC,CAAC,CAAC;IAQA,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;YACjD,IAAI,OAAO,CAAC,EAAE,KAAK,SAAS,EAAE;gBAC5B,MAAM,KAAK,GAAG,kCAAK,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACrC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;gBAC1B,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;aACzB;YAED,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,YAAoB;QAC3B,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAC/C,CAAC;IAED,QAAQ,CAAC,YAAoB,EAAE,WAAsC;QACnE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;IACrD,CAAC;IAED,WAAW,CAAC,KAAY,EAAE,KAAa,EAAE,OAAgB;QACvD,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC;YAC5E,KAAK,EAAE,CAAC,GAAkB,EAAE,EAAE,CAC5B,IAAI,CAAC,YAAY,CAAC,SAAS,CACzB,IAAI,oFAAgB,CAAa,kBAAkB,kCAAO,GAAG,KAAE,GAAG,EAAE,aAAa,GAAG,GAAG,CAAC,GAAG,IAAG,CAC/F;SACJ,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,IAAI;QACF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACtC,IAAI,OAAO,CAAC,EAAE,KAAK,SAAS,EAAE;YAC5B,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;SACnE;aAAM;YACL,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;SACnE;IACH,CAAC;IAES,uBAAuB,CAAC,MAA0C;QAC1E,MAAM,CAAC,IAAI,CAAC,+DAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,SAAS,CAC1D,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,EAC1B,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CACzB,CAAC;IACJ,CAAC;IAES,aAAa;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAES,WAAW;QACnB,uBAAuB;IACzB,CAAC;IAES,cAAc;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAES,UAAU,CAAC,OAAiB;QACpC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;YACvB,EAAE,EAAE,OAAO,CAAC,EAAE;YACd,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,WAAW,EAAE,OAAO,CAAC,WAAW;YAChC,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,2EAAgB,CAAC,CAAC,CAAC,CAAC,IAAI;YAChF,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,2EAAgB,CAAC,CAAC,CAAC,CAAC,IAAI;SAC3E,CAAC,CAAC;IACL,CAAC;IAES,cAAc;QACtB,uCACK,IAAI,sDAAO,EAAE,KAChB,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAE,CAAC,KAAK,EACpC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAE,CAAC,KAAK,EAC1C,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAE,CAAC,KAAK,EACtD,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CAAE,CAAC,KAAK,CAAC,CAAC,CAAC,kCAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CAAE,CAAC,KAAK,EAAE,2EAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,EACjI,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAE,CAAC,KAAK,CAAC,CAAC,CAAC,kCAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAE,CAAC,KAAK,EAAE,2EAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,IAC3H;IACJ,CAAC;;4FApGU,sBAAsB;sGAAtB,sBAAsB;QCpBnC,yEAAwC;QACtC;QAAA,yEAAmB;QACjB;QAAA,0EAAwF;QAA3C,kJAAY,UAAM,IAAC;QAC9D;QAAA,wEAA2H;QACzH,qGACF;QAAA,4DAAK;QAEL;QAAA,sEAAK;QACH;QAAA,8EAAmC;QAEnC;QAAA,0EAAqE;QACnE;QAAA,4EAAgF;QAAA,8DAAE;QAAA,4DAAQ;QAC1F;QAAA,uEAAwH;QAC1H;QAAA,4DAAM;QAEN;QAAA,0EAAwB;QACtB;QAAA,4EAA4F;QAAA,iEAAK;QAAA,4DAAQ;QACzG;QAAA,uEAAgH;QAChH;QAAA,qHAIM;QACR;QAAA,4DAAM;QAEN;QAAA,0EAAwB;QACtB;QAAA,6EAAwG;QAAA,uEAAW;QAAA,4DAAQ;QAC3H;QAAA,2EAMY;QACZ;QAAA,qHAQM;QACR;QAAA,4DAAM;QAEN;QAAA,0EAAwB;QACtB;QAAA,6EAAoG;QAAA,sEAAU;QAAA,4DAAQ;QACtH;QAAA,2EAAoB;QAClB;QAAA,wEAQE;QACJ;QAAA,4DAAM;QACN;QAAA,qHAeM;QACR;QAAA,4DAAM;QAEN;QAAA,0EAAwB;QACtB;QAAA,6EAAgG;QAAA,oEAAQ;QAAA,4DAAQ;QAChH;QAAA,2EAAoB;QAClB;QAAA,wEAQE;QACJ;QAAA,4DAAM;QACN;QAAA,qHAeM;QACR;QAAA,4DAAM;QACR;QAAA,4DAAM;QAEN;QAAA,uEAAK;QACH;QAAA,8EAA2F;QAA1B,+IAAS,mBAAe,IAAC;QACxF;QAAA,0EAA8B;QAAA,kEAAM;QAAA,4EAA0C;QAAA,kEAAM;QAAA,4DAAO;QAC7F;QAAA,4DAAS;QAET;QAAA,8EAMC;QACC;QAAA,0EAA+B;QAAA,kEAAM;QAAA,4EAAwC;QAAA,gEAAI;QAAA,4DAAO;QAC1F;QAAA,4DAAS;QACX;QAAA,4DAAM;QACR;QAAA,4DAAO;QACT;QAAA,4DAAM;QACR;QAAA,4DAAM;QACN;;QA5HqE,0DAAsB;QAAtB,mFAAsB;QAQ3D,0DAA4C;QAA5C,wGAA4C;QAEkC,0DAAiB;QAAjB,0EAAiB;QAM/G,2DAAwG;QAAxG,6KAAwG;QAgBxG,2DAA0H;QAA1H,+LAA0H;QAwB1H,2DAAoH;QAApH,yLAAoH;QA+BpH,2DAA8G;QAA9G,mLAA8G;QA4BpH,2DAAyC;QAAzC,0GAAyC;;;;;;;;;;;;;;ACnHnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACI;AACe;AACA;AACa;AAClB;;AAO/D,MAAM,aAAa;;0EAAb,aAAa;4FAAb,aAAa;gGAJf,CAAC,qEAAY,EAAE,kFAAoB,CAAC;mIAIlC,aAAa,mBAHT,wEAAgB,EAAE,uFAAsB,EAAE,uFAAsB,EAAE,oGAA4B,aADnG,qEAAY,EAAE,kFAAoB;;;;;;;;;;;;;ACT9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAE0B;AACpB;AACe;AACA;AACK;;;AAEjF,MAAM,YAAY,GAAW;IAC3B;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAgB;QAC3B,WAAW,EAAE,CAAC,8FAAsB,CAAC;KACtC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,uFAAsB;QACjC,OAAO,EAAE;YACP,OAAO,EAAE,6FAA4B;SACtC;QACD,WAAW,EAAE,CAAC,8FAAsB,CAAC;KACtC;IACD;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,uFAAsB;QACjC,OAAO,EAAE;YACP,OAAO,EAAE,6FAA4B;SACtC;QACD,WAAW,EAAE,CAAC,8FAAsB,CAAC;KACtC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,uFAAsB;QACjC,OAAO,EAAE;YACP,OAAO,EAAE,6FAA4B;SACtC;QACD,WAAW,EAAE,CAAC,8FAAsB,CAAC;KACtC;CACF,CAAC;AAMK,MAAM,oBAAoB;;wFAApB,oBAAoB;mGAApB,oBAAoB;uGAHtB,CAAC,4DAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,EACpC,4DAAY;mIAEX,oBAAoB,uFAFrB,4DAAY;;;;;;;;;;;;;ACrCxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyF;;;;;;;;;;;;;ICoBvF,0EAA+E;IAC7E;IAAA,2EAAsD;IAAA,4EAAiB;IAAA,4DAAO;IAChF;IAAA,4DAAM;;;;;;IAeA,yEAA6E;IAC3E;IAAA,qEAAI;IACF;IAAA,wEAAmD;IAAA,uDAAgB;IAAA,4DAAI;IACzE;IAAA,4DAAK;IACL;IAAA,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B;IAAA,sEAAI;IAAA,wDAAyB;IAAA,4DAAK;IAClC;IAAA,sEAAI;IAAA,wDAA8C;;IAAA,4DAAK;IACvD;IAAA,sEAAI;IAAA,wDAA4C;;IAAA,4DAAK;IACrD;IAAA,0EAAuB;IACrB;IAAA,2EAAuB;IACrB;IAAA,8EAKC;IACC;IAAA,0EAA8B;IAC9B;IAAA,4EAAmE;IAAA,gEAAI;IAAA,4DAAO;IAChF;IAAA,4DAAS;IAET;IAAA,8EAKC;IACC;IAAA,0EAAqC;IACrC;IAAA,4EAAmE;IAAA,gEAAI;IAAA,4DAAO;IAChF;IAAA,4DAAS;IAET;IAAA,8EAA2G;IAArF,sWAAyB;IAC7C;IAAA,0EAAgC;IAChC;IAAA,4EAAqE;IAAA,kEAAM;IAAA,4DAAO;IACpF;IAAA,4DAAS;IACX;IAAA,4DAAM;IACR;IAAA,4DAAK;IACP;IAAA,4DAAK;;;IAlCE,0DAA+C;IAA/C,6JAA+C;IAAC,0DAAgB;IAAhB,8EAAgB;IAEjE,0DAAmB;IAAnB,iFAAmB;IACnB,0DAAyB;IAAzB,uFAAyB;IACzB,0DAA8C;IAA9C,uJAA8C;IAC9C,0DAA4C;IAA5C,sJAA4C;IAK1C,0DAA+C;IAA/C,6JAA+C;IAU/C,0DAA+C;IAA/C,6JAA+C;;;IAnC7D,0EAAoF;IAClF;IAAA,4EAAmE;IACjE;IAAA,wEAAO;IACL;IAAA,qEAAI;IACF;IAAA,yEAAgB;IAAA,2EAAqC;IAAA,8DAAE;IAAA,4DAAO;IAAA,4DAAK;IACnE;IAAA,0EAAgB;IAAA,4EAA8C;IAAA,iEAAK;IAAA,4DAAO;IAAA,4DAAK;IAC/E;IAAA,0EAAgB;IAAA,4EAAoD;IAAA,uEAAW;IAAA,4DAAO;IAAA,4DAAK;IAC3F;IAAA,0EAAgB;IAAA,4EAAkD;IAAA,sEAAU;IAAA,4DAAO;IAAA,4DAAK;IACxF;IAAA,0EAAgB;IAAA,4EAAgD;IAAA,oEAAQ;IAAA,4DAAO;IAAA,4DAAK;IACpF;IAAA,qEAAqB;IACvB;IAAA,4DAAK;IACP;IAAA,4DAAQ;IACR;IAAA,yEAAO;IACL;IAAA,sHAoCK;IACP;IAAA,4DAAQ;IACV;IAAA,4DAAQ;IACV;IAAA,4DAAM;;;IAvCwB,2DAAa;IAAb,oFAAa;;;AD9BtC,MAAM,gBAAgB;IAI3B,YAAsB,cAA8B,EAAY,SAAoB,EAAY,YAAsB;QAAhG,mBAAc,GAAd,cAAc,CAAgB;QAAY,cAAS,GAAT,SAAS,CAAW;QAAY,iBAAY,GAAZ,YAAY,CAAU;QAFtH,cAAS,GAAG,KAAK,CAAC;IAEuG,CAAC;IAE1H,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,SAAS,CACnC,CAAC,GAA6B,EAAE,EAAE;;YAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,QAAQ,SAAG,GAAG,CAAC,IAAI,mCAAI,EAAE,CAAC;QACjC,CAAC,EACD,GAAG,EAAE;YACH,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO,CAAC,KAAa,EAAE,IAAc;QACnC,OAAO,IAAI,CAAC,EAAG,CAAC;IAClB,CAAC;IAED,QAAQ,CAAC,YAAoB;QAC3B,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAC/C,CAAC;IAED,QAAQ,CAAC,YAAoB,EAAE,WAAsC;QACnE,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;IAC5D,CAAC;IAED,MAAM,CAAC,OAAiB;QACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oGAA4B,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC1G,QAAQ,CAAC,iBAAiB,CAAC,OAAO,GAAG,OAAO,CAAC;QAC7C,iEAAiE;QACjE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACjC,IAAI,MAAM,KAAK,SAAS,EAAE;gBACxB,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;gFA7CU,gBAAgB;gGAAhB,gBAAgB;QCb7B,sEAAK;QACH;QAAA,wEAA+C;QAC7C;QAAA,0EAAmD;QAAA,mEAAQ;QAAA,4DAAO;QAElE;QAAA,yEAAwC;QACtC;QAAA,4EAA6E;QAA3C,wIAAS,aAAS,IAAC;QACnD;QAAA,yEAAkD;QAClD;QAAA,2EAA8D;QAAA,wEAAY;QAAA,4DAAO;QACnF;QAAA,4DAAS;QAET;QAAA,6EAKC;QACC;QAAA,yEAA+B;QAC/B;QAAA,2EAAyD;QAAC,kFAAqB;QAAA,4DAAO;QACxF;QAAA,4DAAS;QACX;QAAA,4DAAM;QACR;QAAA,4DAAK;QAEL;QAAA,8EAAmC;QAEnC;QAAA,wEAAuB;QAEvB;QAAA,8GAEM;QAEN;QAAA,gHAoDM;QACR;QAAA,4DAAM;QACN;;QA/E4D,0DAAsB;QAAtB,mFAAsB;QACrD,0DAAkB;QAAlB,+EAAkB;QAQvC,0DAA+B;QAA/B,6IAA+B;QAYY,2DAA4B;QAA5B,2HAA4B;QAIhC,0DAAqC;QAArC,yGAAqC;;;;;;;;;;;;;;AC3BpF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACH;AAEW;;;;AAI9C,MAAM,4BAA4B;IACvC,YAAsB,OAAuB,EAAY,MAAc;QAAjD,YAAO,GAAP,OAAO,CAAgB;QAAY,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAE3E,OAAO,CAAC,KAA6B;QACnC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,EAAE,EAAE;YACN,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAC/B,+DAAQ,CAAC,CAAC,OAA8B,EAAE,EAAE;gBAC1C,IAAI,OAAO,CAAC,IAAI,EAAE;oBAChB,OAAO,+CAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBACzB;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC9B,OAAO,0CAAK,CAAC;iBACd;YACH,CAAC,CAAC,CACH,CAAC;SACH;QACD,OAAO,+CAAE,CAAC,IAAI,sDAAO,EAAE,CAAC,CAAC;IAC3B,CAAC;;wGAlBU,4BAA4B;+GAA5B,4BAA4B,WAA5B,4BAA4B,mBADf,MAAM","file":"session-session-module.js","sourcesContent":["<form *ngIf=\"session\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(session.id!)\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" data-cy=\"sessionDeleteDialogHeading\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\n  </div>\n\n  <div class=\"modal-body\">\n    <jhi-alert-error></jhi-alert-error>\n\n    <p id=\"jhi-delete-session-heading\" jhiTranslate=\"gatewayApp.session.delete.question\" [translateValues]=\"{ id: session.id }\">\n      Are you sure you want to delete this Session?\n    </p>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n    </button>\n\n    <button id=\"jhi-confirm-delete-session\" data-cy=\"entityConfirmDeleteButton\" type=\"submit\" class=\"btn btn-danger\">\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n    </button>\n  </div>\n</form>\n","import { Component } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ISession } from '../session.model';\nimport { SessionService } from '../service/session.service';\n\n@Component({\n  templateUrl: './session-delete-dialog.component.html',\n})\nexport class SessionDeleteDialogComponent {\n  session?: ISession;\n\n  constructor(protected sessionService: SessionService, public activeModal: NgbActiveModal) {}\n\n  cancel(): void {\n    this.activeModal.dismiss();\n  }\n\n  confirmDelete(id: number): void {\n    this.sessionService.delete(id).subscribe(() => {\n      this.activeModal.close('deleted');\n    });\n  }\n}\n","<div class=\"row justify-content-center\">\n  <div class=\"col-8\">\n    <div *ngIf=\"session\">\n      <h2 data-cy=\"sessionDetailsHeading\"><span jhiTranslate=\"gatewayApp.session.detail.title\">Session</span></h2>\n\n      <hr />\n\n      <jhi-alert-error></jhi-alert-error>\n\n      <jhi-alert></jhi-alert>\n\n      <dl class=\"row-md jh-entity-details\">\n        <dt><span jhiTranslate=\"global.field.id\">ID</span></dt>\n        <dd>\n          <span>{{ session.id }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"gatewayApp.session.title\">Title</span></dt>\n        <dd>\n          <span>{{ session.title }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"gatewayApp.session.description\">Description</span></dt>\n        <dd>\n          <span>{{ session.description }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"gatewayApp.session.startTime\">Start Time</span></dt>\n        <dd>\n          <span>{{ session.startTime | formatMediumDatetime }}</span>\n        </dd>\n        <dt><span jhiTranslate=\"gatewayApp.session.endTime\">End Time</span></dt>\n        <dd>\n          <span>{{ session.endTime | formatMediumDatetime }}</span>\n        </dd>\n      </dl>\n\n      <button type=\"submit\" (click)=\"previousState()\" class=\"btn btn-info\" data-cy=\"entityDetailsBackButton\">\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.back\">Back</span>\n      </button>\n\n      <button type=\"button\" [routerLink]=\"['/session', session.id, 'edit']\" class=\"btn btn-primary\">\n        <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.edit\">Edit</span>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ISession } from '../session.model';\nimport { DataUtils } from 'app/core/util/data-util.service';\n\n@Component({\n  selector: 'jhi-session-detail',\n  templateUrl: './session-detail.component.html',\n})\nexport class SessionDetailComponent implements OnInit {\n  session: ISession | null = null;\n\n  constructor(protected dataUtils: DataUtils, protected activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ session }) => {\n      this.session = session;\n    });\n  }\n\n  byteSize(base64String: string): string {\n    return this.dataUtils.byteSize(base64String);\n  }\n\n  openFile(base64String: string, contentType: string | null | undefined): void {\n    this.dataUtils.openFile(base64String, contentType);\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n}\n","export const DATE_FORMAT = 'YYYY-MM-DD';\nexport const DATE_TIME_FORMAT = 'YYYY-MM-DDTHH:mm';\n","import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport * as dayjs from 'dayjs';\nimport { DATE_TIME_FORMAT } from 'app/config/input.constants';\n\nimport { ISession, Session } from '../session.model';\nimport { SessionService } from '../service/session.service';\nimport { AlertError } from 'app/shared/alert/alert-error.model';\nimport { EventManager, EventWithContent } from 'app/core/util/event-manager.service';\nimport { DataUtils, FileLoadError } from 'app/core/util/data-util.service';\n\n@Component({\n  selector: 'jhi-session-update',\n  templateUrl: './session-update.component.html',\n})\nexport class SessionUpdateComponent implements OnInit {\n  isSaving = false;\n\n  editForm = this.fb.group({\n    id: [],\n    title: [null, [Validators.required]],\n    description: [null, [Validators.required]],\n    startTime: [null, [Validators.required]],\n    endTime: [null, [Validators.required]],\n  });\n\n  constructor(\n    protected dataUtils: DataUtils,\n    protected eventManager: EventManager,\n    protected sessionService: SessionService,\n    protected activatedRoute: ActivatedRoute,\n    protected fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(({ session }) => {\n      if (session.id === undefined) {\n        const today = dayjs().startOf('day');\n        session.startTime = today;\n        session.endTime = today;\n      }\n\n      this.updateForm(session);\n    });\n  }\n\n  byteSize(base64String: string): string {\n    return this.dataUtils.byteSize(base64String);\n  }\n\n  openFile(base64String: string, contentType: string | null | undefined): void {\n    this.dataUtils.openFile(base64String, contentType);\n  }\n\n  setFileData(event: Event, field: string, isImage: boolean): void {\n    this.dataUtils.loadFileToForm(event, this.editForm, field, isImage).subscribe({\n      error: (err: FileLoadError) =>\n        this.eventManager.broadcast(\n          new EventWithContent<AlertError>('gatewayApp.error', { ...err, key: 'error.file.' + err.key })\n        ),\n    });\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const session = this.createFromForm();\n    if (session.id !== undefined) {\n      this.subscribeToSaveResponse(this.sessionService.update(session));\n    } else {\n      this.subscribeToSaveResponse(this.sessionService.create(session));\n    }\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<ISession>>): void {\n    result.pipe(finalize(() => this.onSaveFinalize())).subscribe(\n      () => this.onSaveSuccess(),\n      () => this.onSaveError()\n    );\n  }\n\n  protected onSaveSuccess(): void {\n    this.previousState();\n  }\n\n  protected onSaveError(): void {\n    // Api for inheritance.\n  }\n\n  protected onSaveFinalize(): void {\n    this.isSaving = false;\n  }\n\n  protected updateForm(session: ISession): void {\n    this.editForm.patchValue({\n      id: session.id,\n      title: session.title,\n      description: session.description,\n      startTime: session.startTime ? session.startTime.format(DATE_TIME_FORMAT) : null,\n      endTime: session.endTime ? session.endTime.format(DATE_TIME_FORMAT) : null,\n    });\n  }\n\n  protected createFromForm(): ISession {\n    return {\n      ...new Session(),\n      id: this.editForm.get(['id'])!.value,\n      title: this.editForm.get(['title'])!.value,\n      description: this.editForm.get(['description'])!.value,\n      startTime: this.editForm.get(['startTime'])!.value ? dayjs(this.editForm.get(['startTime'])!.value, DATE_TIME_FORMAT) : undefined,\n      endTime: this.editForm.get(['endTime'])!.value ? dayjs(this.editForm.get(['endTime'])!.value, DATE_TIME_FORMAT) : undefined,\n    };\n  }\n}\n","<div class=\"row justify-content-center\">\n  <div class=\"col-8\">\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\n      <h2 id=\"jhi-session-heading\" data-cy=\"SessionCreateUpdateHeading\" jhiTranslate=\"gatewayApp.session.home.createOrEditLabel\">\n        Create or edit a Session\n      </h2>\n\n      <div>\n        <jhi-alert-error></jhi-alert-error>\n\n        <div class=\"form-group\" [hidden]=\"editForm.get('id')!.value == null\">\n          <label class=\"form-control-label\" jhiTranslate=\"global.field.id\" for=\"field_id\">ID</label>\n          <input type=\"number\" class=\"form-control\" name=\"id\" id=\"field_id\" data-cy=\"id\" formControlName=\"id\" [readonly]=\"true\" />\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"gatewayApp.session.title\" for=\"field_title\">Title</label>\n          <input type=\"text\" class=\"form-control\" name=\"title\" id=\"field_title\" data-cy=\"title\" formControlName=\"title\" />\n          <div *ngIf=\"editForm.get('title')!.invalid && (editForm.get('title')!.dirty || editForm.get('title')!.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('title')?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n              This field is required.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"gatewayApp.session.description\" for=\"field_description\">Description</label>\n          <textarea\n            class=\"form-control\"\n            name=\"description\"\n            id=\"field_description\"\n            data-cy=\"description\"\n            formControlName=\"description\"\n          ></textarea>\n          <div *ngIf=\"editForm.get('description')!.invalid && (editForm.get('description')!.dirty || editForm.get('description')!.touched)\">\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"editForm.get('description')?.errors?.required\"\n              jhiTranslate=\"entity.validation.required\"\n            >\n              This field is required.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"gatewayApp.session.startTime\" for=\"field_startTime\">Start Time</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"field_startTime\"\n              data-cy=\"startTime\"\n              type=\"datetime-local\"\n              class=\"form-control\"\n              name=\"startTime\"\n              formControlName=\"startTime\"\n              placeholder=\"YYYY-MM-DD HH:mm\"\n            />\n          </div>\n          <div *ngIf=\"editForm.get('startTime')!.invalid && (editForm.get('startTime')!.dirty || editForm.get('startTime')!.touched)\">\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"editForm.get('startTime')?.errors?.required\"\n              jhiTranslate=\"entity.validation.required\"\n            >\n              This field is required.\n            </small>\n            <small\n              class=\"form-text text-danger\"\n              [hidden]=\"!editForm.get('startTime')?.errors?.ZonedDateTimelocal\"\n              jhiTranslate=\"entity.validation.ZonedDateTimelocal\"\n            >\n              This field should be a date and time.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" jhiTranslate=\"gatewayApp.session.endTime\" for=\"field_endTime\">End Time</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"field_endTime\"\n              data-cy=\"endTime\"\n              type=\"datetime-local\"\n              class=\"form-control\"\n              name=\"endTime\"\n              formControlName=\"endTime\"\n              placeholder=\"YYYY-MM-DD HH:mm\"\n            />\n          </div>\n          <div *ngIf=\"editForm.get('endTime')!.invalid && (editForm.get('endTime')!.dirty || editForm.get('endTime')!.touched)\">\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"editForm.get('endTime')?.errors?.required\"\n              jhiTranslate=\"entity.validation.required\"\n            >\n              This field is required.\n            </small>\n            <small\n              class=\"form-text text-danger\"\n              [hidden]=\"!editForm.get('endTime')?.errors?.ZonedDateTimelocal\"\n              jhiTranslate=\"entity.validation.ZonedDateTimelocal\"\n            >\n              This field should be a date and time.\n            </small>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <button type=\"button\" id=\"cancel-save\" class=\"btn btn-secondary\" (click)=\"previousState()\">\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n\n        <button\n          type=\"submit\"\n          id=\"save-entity\"\n          data-cy=\"entityCreateSaveButton\"\n          [disabled]=\"editForm.invalid || isSaving\"\n          class=\"btn btn-primary\"\n        >\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from 'app/shared/shared.module';\nimport { SessionComponent } from './list/session.component';\nimport { SessionDetailComponent } from './detail/session-detail.component';\nimport { SessionUpdateComponent } from './update/session-update.component';\nimport { SessionDeleteDialogComponent } from './delete/session-delete-dialog.component';\nimport { SessionRoutingModule } from './route/session-routing.module';\n\n@NgModule({\n  imports: [SharedModule, SessionRoutingModule],\n  declarations: [SessionComponent, SessionDetailComponent, SessionUpdateComponent, SessionDeleteDialogComponent],\n  entryComponents: [SessionDeleteDialogComponent],\n})\nexport class SessionModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\nimport { SessionComponent } from '../list/session.component';\nimport { SessionDetailComponent } from '../detail/session-detail.component';\nimport { SessionUpdateComponent } from '../update/session-update.component';\nimport { SessionRoutingResolveService } from './session-routing-resolve.service';\n\nconst sessionRoute: Routes = [\n  {\n    path: '',\n    component: SessionComponent,\n    canActivate: [UserRouteAccessService],\n  },\n  {\n    path: ':id/view',\n    component: SessionDetailComponent,\n    resolve: {\n      session: SessionRoutingResolveService,\n    },\n    canActivate: [UserRouteAccessService],\n  },\n  {\n    path: 'new',\n    component: SessionUpdateComponent,\n    resolve: {\n      session: SessionRoutingResolveService,\n    },\n    canActivate: [UserRouteAccessService],\n  },\n  {\n    path: ':id/edit',\n    component: SessionUpdateComponent,\n    resolve: {\n      session: SessionRoutingResolveService,\n    },\n    canActivate: [UserRouteAccessService],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(sessionRoute)],\n  exports: [RouterModule],\n})\nexport class SessionRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ISession } from '../session.model';\nimport { SessionService } from '../service/session.service';\nimport { SessionDeleteDialogComponent } from '../delete/session-delete-dialog.component';\nimport { DataUtils } from 'app/core/util/data-util.service';\n\n@Component({\n  selector: 'jhi-session',\n  templateUrl: './session.component.html',\n})\nexport class SessionComponent implements OnInit {\n  sessions?: ISession[];\n  isLoading = false;\n\n  constructor(protected sessionService: SessionService, protected dataUtils: DataUtils, protected modalService: NgbModal) {}\n\n  loadAll(): void {\n    this.isLoading = true;\n\n    this.sessionService.query().subscribe(\n      (res: HttpResponse<ISession[]>) => {\n        this.isLoading = false;\n        this.sessions = res.body ?? [];\n      },\n      () => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.loadAll();\n  }\n\n  trackId(index: number, item: ISession): number {\n    return item.id!;\n  }\n\n  byteSize(base64String: string): string {\n    return this.dataUtils.byteSize(base64String);\n  }\n\n  openFile(base64String: string, contentType: string | null | undefined): void {\n    return this.dataUtils.openFile(base64String, contentType);\n  }\n\n  delete(session: ISession): void {\n    const modalRef = this.modalService.open(SessionDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\n    modalRef.componentInstance.session = session;\n    // unsubscribe not needed because closed completes on modal close\n    modalRef.closed.subscribe(reason => {\n      if (reason === 'deleted') {\n        this.loadAll();\n      }\n    });\n  }\n}\n","<div>\n  <h2 id=\"page-heading\" data-cy=\"SessionHeading\">\n    <span jhiTranslate=\"gatewayApp.session.home.title\">Sessions</span>\n\n    <div class=\"d-flex justify-content-end\">\n      <button class=\"btn btn-info mr-2\" (click)=\"loadAll()\" [disabled]=\"isLoading\">\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\n        <span jhiTranslate=\"gatewayApp.session.home.refreshListLabel\">Refresh List</span>\n      </button>\n\n      <button\n        id=\"jh-create-entity\"\n        data-cy=\"entityCreateButton\"\n        class=\"btn btn-primary jh-create-entity create-session\"\n        [routerLink]=\"['/session/new']\"\n      >\n        <fa-icon icon=\"plus\"></fa-icon>\n        <span jhiTranslate=\"gatewayApp.session.home.createLabel\"> Create a new Session </span>\n      </button>\n    </div>\n  </h2>\n\n  <jhi-alert-error></jhi-alert-error>\n\n  <jhi-alert></jhi-alert>\n\n  <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"sessions?.length === 0\">\n    <span jhiTranslate=\"gatewayApp.session.home.notFound\">No sessions found</span>\n  </div>\n\n  <div class=\"table-responsive\" id=\"entities\" *ngIf=\"sessions && sessions.length > 0\">\n    <table class=\"table table-striped\" aria-describedby=\"page-heading\">\n      <thead>\n        <tr>\n          <th scope=\"col\"><span jhiTranslate=\"global.field.id\">ID</span></th>\n          <th scope=\"col\"><span jhiTranslate=\"gatewayApp.session.title\">Title</span></th>\n          <th scope=\"col\"><span jhiTranslate=\"gatewayApp.session.description\">Description</span></th>\n          <th scope=\"col\"><span jhiTranslate=\"gatewayApp.session.startTime\">Start Time</span></th>\n          <th scope=\"col\"><span jhiTranslate=\"gatewayApp.session.endTime\">End Time</span></th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let session of sessions; trackBy: trackId\" data-cy=\"entityTable\">\n          <td>\n            <a [routerLink]=\"['/session', session.id, 'view']\">{{ session.id }}</a>\n          </td>\n          <td>{{ session.title }}</td>\n          <td>{{ session.description }}</td>\n          <td>{{ session.startTime | formatMediumDatetime }}</td>\n          <td>{{ session.endTime | formatMediumDatetime }}</td>\n          <td class=\"text-right\">\n            <div class=\"btn-group\">\n              <button\n                type=\"submit\"\n                [routerLink]=\"['/session', session.id, 'view']\"\n                class=\"btn btn-info btn-sm\"\n                data-cy=\"entityDetailsButton\"\n              >\n                <fa-icon icon=\"eye\"></fa-icon>\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.view\">View</span>\n              </button>\n\n              <button\n                type=\"submit\"\n                [routerLink]=\"['/session', session.id, 'edit']\"\n                class=\"btn btn-primary btn-sm\"\n                data-cy=\"entityEditButton\"\n              >\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\">Edit</span>\n              </button>\n\n              <button type=\"submit\" (click)=\"delete(session)\" class=\"btn btn-danger btn-sm\" data-cy=\"entityDeleteButton\">\n                <fa-icon icon=\"times\"></fa-icon>\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.delete\">Delete</span>\n              </button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport { ISession, Session } from '../session.model';\nimport { SessionService } from '../service/session.service';\n\n@Injectable({ providedIn: 'root' })\nexport class SessionRoutingResolveService implements Resolve<ISession> {\n  constructor(protected service: SessionService, protected router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<ISession> | Observable<never> {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id).pipe(\n        mergeMap((session: HttpResponse<Session>) => {\n          if (session.body) {\n            return of(session.body);\n          } else {\n            this.router.navigate(['404']);\n            return EMPTY;\n          }\n        })\n      );\n    }\n    return of(new Session());\n  }\n}\n"],"sourceRoot":"webpack:///"}